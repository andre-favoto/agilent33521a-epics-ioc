TERMINATOR = NL;
ExtraInput = Ignore;
ReplyTimeout = 1000;

channelOutputRead {
    out "OUTPut1?";
    in "%i"
}

channelOutputEnable {
    out "OUTPut1 %{OFF|ON}";
    @init { channelOutputRead; }
}

getWaveformFunction {
    out "SOURce1:FUNCtion?";
    in "%{SIN|SQU|TRI|RAMP|PULS|PRBS|NOIS|ARB|DC}"
}

setWaveformFunction {
    out "SOURce1:FUNCtion %{SIN|SQU|TRI|RAMP|PULS|PRBS|NOIS|ARB|DC}";
    @init { getWaveformFunction }
}

getFrequency {
    out "SOURce1:FREQuency?";
    in "%f";
    @init { wait 5000; }
}

setFrequency {
    out "SOURce1:FREQuency %g";
    @init { getFrequency }
}

getAmplitude {
    out "SOURce1:VOLT?";
    in "%f";
}

setAmplitude {
    out "SOURce1:VOLT %g";
    @init { getAmplitude }
}

getOffset {
    out "SOURce1:VOLT:OFFSet?";
    in "%f"
}

setOffset {
    out "SOURce1:VOLT:OFFSet %g";
    @init { getOffset }
}

getPhase {
    out "SOURce1:PHASe?";
    in "%f"
}

setPhase {
    out "SOURce1:PHASe %g";
    @init { getPhase }
}

getSquareDutyCycle {
    out "SOURce1:FUNCtion:SQUare:DCYCle?";
    in "%f"
}

setSquareDutyCycle {
    out "SOURce1:FUNCtion:SQUare:DCYCle %g";
    @init { getSquareDutyCycle }
}

getRampSymmetry {
    out "SOURce1:FUNCtion:RAMP:SYMMetry?";
    in "%f"
}

setRampSymmetry {
    out "SOURce1:FUNCtion:RAMP:SYMMetry %g";
    @init { getRampSymmetry }
}

getPulseWidth {
    out "SOURce1:FUNCtion:PULSe:WIDTh?";
    in "%f"
}

setPulseWidth {
    out "SOURce1:FUNCtion:PULSe:WIDTh %g";
    @init { getPulseWidth }
}

getPulseLeadingEdge {
    out "SOURce1:FUNCtion:PULSe:TRANsition:LEADing?";
    in "%f"
}

setPulseLeadingEdge {
    out "SOURce1:FUNCtion:PULSe:TRANsition:LEADing %g";
    @init { getPulseLeadingEdge }
}

getPulseTrailingEdge {
    out "SOURce1:FUNCtion:PULSe:TRANsition:TRAiling?";
    in "%f"
}

setPulseTrailingEdge {
    out "SOURce1:FUNCtion:PULSe:TRANsition:TRAiling %g";
    @init { getPulseTrailingEdge }
}

getPrbsBitRate {
    out "SOURce1:FUNCtion:PRBS:BRATe?";
    in "%f"
}

setPrbsBitRate {
    out "SOURce1:FUNCtion:PRBS:BRATe %g";
    @init { getPrbsBitRate }
}

getPrbsEdgeTime {
    out "SOURce1:FUNCtion:PRBS:TRANsition?";
    in "%f"
}

setPrbsEdgeTime {
    out "SOURce1:FUNCtion:PRBS:TRANsition %g";
    @init { getPrbsEdgeTime }
}

getPrbsSequenceType {
    out "SOURce1:FUNCtion:PRBS:DATA?";
    in "%s"
}

setPrbsSequenceType {
    out "SOURce1:FUNCtion:PRBS:DATA %s";
    @init { getPrbsSequenceType }
}

getNoiseBandwidth {
    out "SOURce1:FUNCtion:NOISe:BANDwidth?";
    in "%f"
}

setNoiseBandwidth {
    out "SOURce1:FUNCtion:NOISe:BANDwidth %g";
    @init { getNoiseBandwidth }
}

getArbitraryWaveformSampleRate {
    out "SOURce1:FUNCtion:ARBitrary:SRATe?";
    in "%f"
}

setArbitraryWaveformSampleRate {
    out "SOURce1:FUNCtion:ARBitrary:SRATe %g";
    @init { getArbitraryWaveformSampleRate }
}

getArbitraryWaveformFile {
    out "SOURce1:FUNCtion:ARBitrary?";
    in "%.1/\"([^\"]*)\"/"
}

loadArbitraryWaveformFile {
    out "MMEMory:LOAD:DATA1 \"%s\"";
}

setArbitraryWaveformFile {
    out "SOURce1:FUNCtion:ARBitrary \"%s\"";
    @init { getArbitraryWaveformFile }
}

loadArbitraryWaveformData {
    out "SOURce1:DATA:ARBitrary %s"
}

clearMemory {
    out "DATA:VOLatile:CLEar"
}
