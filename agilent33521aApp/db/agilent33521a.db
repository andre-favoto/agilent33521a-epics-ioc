record(bo, "$(P)$(R)channelOutput-Sel") {
    field(DESC, "Enable channel output")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
    field(DTYP, "stream")
    field(OUT, "@agilent33521a.proto channelOutputEnable $(PORT)")
    field(FLNK, "$(P)$(R)channelOutput-Sts")
}

record(bi, "$(P)$(R)channelOutput-Sts") {
    field(DESC, "Read channel output status")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
    field(DTYP, "stream")
    field(PINI, 1)
    field(INP, "@agilent33521a.proto channelOutputRead $(PORT)")
}

record(mbbi, "$(P)$(R)waveformFunction-Sts") {
    field(DESC, "Read current waveform function")
    field(ZRST, "Sine")
    field(ONST, "Square")
    field(TWST, "Triangle")
    field(THST, "Ramp")
    field(FRST, "Pulse")
    field(FVST, "Pseudo-random Bit Stream")
    field(SXST, "Noise")
    field(SVST, "Arbitrary")
    field(EIST, "DC")
    field(DTYP, "stream")
    field(PINI, 1)
    field(INP, "@agilent33521a.proto getWaveformFunction $(PORT)")
}

record(mbbo, "$(P)$(R)waveformFunction-Sel") {
    field(DESC, "Select waveform function")
    field(ZRST, "Sine")
    field(ONST, "Square")
    field(TWST, "Triangle")
    field(THST, "Ramp")
    field(FRST, "Pulse")
    field(FVST, "Pseudo-random Bit Stream")
    field(SXST, "Noise")
    field(SVST, "Arbitrary")
    field(EIST, "DC")
    field(DTYP, "stream")
    field(OUT, "@agilent33521a.proto setWaveformFunction $(PORT)")
    field(FLNK, "$(P)$(R)waveformFunction-Sts")
}

record(ai, "$(P)$(R)frequency-RB") {
    field(DESC, "Read configured frequency")
    field(EGU, "Hz")
    field(PINI, 1)
    field(DTYP, "stream")
    field(INP, "@agilent33521a.proto getFrequency $(PORT)")
}

record(ao, "$(P)$(R)frequency-SP") {
    field(DESC, "Configure frequency value")
    field(EGU, "Hz")
    field(DTYP, "stream")
    field(OUT, "@agilent33521a.proto setFrequency $(PORT)")
    field(FLNK, "$(P)$(R)frequency-RB")
}

record(ai, "$(P)$(R)amplitude-RB") {
    field(DESC, "Read configured amplitude")
    field(EGU, "V")
    field(PINI, 1)
    field(DTYP, "stream")
    field(INP, "@agilent33521a.proto getAmplitude $(PORT)")
}

record(ao, "$(P)$(R)amplitude-SP") {
    field(DESC, "Configure amplitude value")
    field(EGU, "V")
    field(DTYP, "stream")
    field(OUT, "@agilent33521a.proto setAmplitude $(PORT)")
    field(FLNK, "$(P)$(R)amplitude-RB")
}

record(ai, "$(P)$(R)offset-RB") {
    field(DESC, "Read configured DC offset")
    field(EGU, "V")
    field(PINI, 1)
    field(DTYP, "stream")
    field(INP, "@agilent33521a.proto getOffset $(PORT)")
}

record(ao, "$(P)$(R)offset-SP") {
    field(DESC, "Configure DC offset")
    field(EGU, "V")
    field(DTYP, "stream")
    field(OUT, "@agilent33521a.proto setOffset $(PORT)")
    field(FLNK, "$(P)$(R)offset-RB")
}

record(ai, "$(P)$(R)phase-RB") {
    field(DESC, "Read configured phase")
    field(EGU, "degrees")
    field(PINI, 1)
    field(DTYP, "stream")
    field(INP, "@agilent33521a.proto getPhase $(PORT)")
}

record(ao, "$(P)$(R)phase-SP") {
    field(DESC, "Configure phase")
    field(EGU, "degrees")
    field(DTYP, "stream")
    field(OUT, "@agilent33521a.proto setPhase $(PORT)")
    field(FLNK, "$(P)$(R)phase-RB")
}

record(ai, "$(P)$(R)square:dutyCycle-RB") {
    field(DESC, "Read configured square wave duty cycle")
    field(EGU, "%")
    field(PINI, 1)
    field(DTYP, "stream")
    field(INP, "@agilent33521a.proto getSquareDutyCycle $(PORT)")
}

record(ao, "$(P)$(R)square:dutyCycle-SP") {
    field(DESC, "Configure square wave duty cycle")
    field(EGU, "%")
    field(DTYP, "stream")
    field(OUT, "@agilent33521a.proto setSquareDutyCycle $(PORT)")
    field(FLNK, "$(P)$(R)square:dutyCycle-RB")
}

record(ai, "$(P)$(R)ramp:symmetry-RB") {
    field(DESC, "Read configured ramp function symmetry")
    field(EGU, "%")
    field(PINI, 1)
    field(DTYP, "stream")
    field(INP, "@agilent33521a.proto getRampSymmetry $(PORT)")
}

record(ao, "$(P)$(R)ramp:symmetry-SP") {
    field(DESC, "Configure ramp function symmetry")
    field(EGU, "%")
    field(DTYP, "stream")
    field(OUT, "@agilent33521a.proto setRampSymmetry $(PORT)")
    field(FLNK, "$(P)$(R)ramp:symmetry-RB")
}

record(ai, "$(P)$(R)pulse:width-RB") {
    field(DESC, "Read configured pulse width")
    field(EGU, "s")
    field(PINI, 1)
    field(DTYP, "stream")
    field(INP, "@agilent33521a.proto getPulseWidth $(PORT)")
}

record(ao, "$(P)$(R)pulse:width-SP") {
    field(DESC, "Configure pulse width")
    field(EGU, "s")
    field(DTYP, "stream")
    field(OUT, "@agilent33521a.proto setPulseWidth $(PORT)")
    field(FLNK, "$(P)$(R)pulse:width-RB")
}

record(ai, "$(P)$(R)pulse:leadingEdge-RB") {
    field(DESC, "Read configured leading edge time")
    field(EGU, "s")
    field(PINI, 1)
    field(DTYP, "stream")
    field(INP, "@agilent33521a.proto getPulseLeadingEdge $(PORT)")
}

record(ao, "$(P)$(R)pulse:leadingEdge-SP") {
    field(DESC, "Configure pulse leading edge time")
    field(EGU, "s")
    field(DTYP, "stream")
    field(OUT, "@agilent33521a.proto setPulseLeadingEdge $(PORT)")
    field(FLNK, "$(P)$(R)pulse:leadingEdge-RB")
}

record(ai, "$(P)$(R)pulse:trailingEdge-RB") {
    field(DESC, "Read configured trailing edge time")
    field(EGU, "s")
    field(PINI, 1)
    field(DTYP, "stream")
    field(INP, "@agilent33521a.proto getPulseTrailingEdge $(PORT)")
}

record(ao, "$(P)$(R)pulse:trailingEdge-SP") {
    field(DESC, "Configure pulse trailing edge time")
    field(EGU, "s")
    field(DTYP, "stream")
    field(OUT, "@agilent33521a.proto setPulseTrailingEdge $(PORT)")
    field(FLNK, "$(P)$(R)pulse:trailingEdge-RB")
}

record(ai, "$(P)$(R)prbs:bitRate-RB") {
    field(DESC, "Read configured PRBS bit rate")
    field(EGU, "bps")
    field(PINI, 1)
    field(DTYP, "stream")
    field(INP, "@agilent33521a.proto getPrbsBitRate $(PORT)")
}

record(ao, "$(P)$(R)prbs:bitRate-SP") {
    field(DESC, "Configure PRBS bit rate")
    field(EGU, "s")
    field(DTYP, "stream")
    field(OUT, "@agilent33521a.proto setPrbsBitRate $(PORT)")
    field(FLNK, "$(P)$(R)prbs:bitRate-RB")
}

record(ai, "$(P)$(R)prbs:edgeTime-RB") {
    field(DESC, "Read configured PRBS edge time")
    field(EGU, "s")
    field(PINI, 1)
    field(DTYP, "stream")
    field(INP, "@agilent33521a.proto getPrbsEdgeTime $(PORT)")
}

record(ao, "$(P)$(R)prbs:edgeTime-SP") {
    field(DESC, "Configure PRBS edge time")
    field(EGU, "s")
    field(DTYP, "stream")
    field(OUT, "@agilent33521a.proto setPrbsEdgeTime $(PORT)")
    field(FLNK, "$(P)$(R)prbs:edgeTime-RB")
}

record(mbbi, "$(P)$(R)prbs:sequenceType-Sts") {
    field(DESC, "Read current PRBS sequence type")
    field(ZRST, "PN7")
    field(ONST, "PN9")
    field(TWST, "PN11")
    field(THST, "PN15")
    field(FRST, "PN20")
    field(FVST, "PN23")
    field(DTYP, "stream")
    field(PINI, 1)
    field(INP, "@agilent33521a.proto getPrbsSequenceType $(PORT)")
}

record(mbbo, "$(P)$(R)prbs:sequenceType-Sel") {
    field(DESC, "Select PRBS sequence type")
    field(ZRST, "PN7")
    field(ONST, "PN9")
    field(TWST, "PN11")
    field(THST, "PN15")
    field(FRST, "PN20")
    field(FVST, "PN23")
    field(DTYP, "stream")
    field(OUT, "@agilent33521a.proto setPrbsSequenceType $(PORT)")
    field(FLNK, "$(P)$(R)prbs:sequenceType-Sts")
}

record(ai, "$(P)$(R)noise:bandwidth-RB") {
    field(DESC, "Read configured noise function bandwidth")
    field(EGU, "Hz")
    field(PINI, 1)
    field(DTYP, "stream")
    field(INP, "@agilent33521a.proto getNoiseBandwidth $(PORT)")
}

record(ao, "$(P)$(R)noise:bandwidth-SP") {
    field(DESC, "Configure noise function bandwidth")
    field(EGU, "Hz")
    field(DTYP, "stream")
    field(OUT, "@agilent33521a.proto setNoiseBandwidth $(PORT)")
    field(FLNK, "$(P)$(R)noise:bandwidth-RB")
}

record(ai, "$(P)$(R)arbitrary:sampleRate-RB") {
    field(DESC, "Read sample rate for arbitrary waveform")
    field(EGU, "Sa/s")
    field(PINI, 1)
    field(DTYP, "stream")
    field(INP, "@agilent33521a.proto getArbitraryWaveformSampleRate $(PORT)")
}

record(ao, "$(P)$(R)arbitrary:sampleRate-SP") {
    field(DESC, "Set sample rate for arbitrary waveform")
    field(EGU, "Sa/s")
    field(DTYP, "stream")
    field(OUT, "@agilent33521a.proto setArbitraryWaveformSampleRate $(PORT)")
    field(FLNK, "$(P)$(R)arbitrary:sampleRate-RB")
}
